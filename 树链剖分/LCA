#include<bits/stdc++.h>
using namespace std;
int n,m,rt;
#define maxn 500010
int head[maxn],nxt[maxn<<1],to[maxn<<1],tot=0;
int top[maxn],sz[maxn],son[maxn],fa[maxn],dep[maxn];
void add(int x,int y)
{
	to[++tot]=y;
	nxt[tot]=head[x];
	head[x]=tot;
}
void dfs1(int x,int f)
{
	fa[x]=f;
	sz[x]=1;
	dep[x]=dep[f]+1;
	for(int i=head[x];i;i=nxt[i])
	{
		int y=to[i];
		if(y==f)
		continue;
		dfs1(y,x);
		sz[x]+=sz[y];
		if(sz[y]>sz[son[x]])
		son[x]=y;
	}
}
void dfs2(int x,int tp)
{
	top[x]=tp;
	if(son[x])
	dfs2(son[x],tp);
	for(int i=head[x];i;i=nxt[i])
	{
		int y=to[i];
		if(y==fa[x]||y==son[x])
		continue;
		dfs2(y,y);
	}
}
int lca(int x,int y)
{
	while(top[x]!=top[y])
	{
		if(dep[top[x]]<dep[top[y]])
		swap(x,y);
		x=fa[top[x]];
	}
	if(dep[x]>dep[y])
	swap(x,y);
	return x;
}
int main()
{
	scanf("%d%d%d",&n,&m,&rt);
	for(int i=1;i<n;i++)
	{
		int x,y;
		scanf("%d%d",&x,&y);
		add(x,y);
		add(y,x);
	}
	dfs1(rt,0);
	dfs2(rt,rt);
	while(m--)
	{
		int x,y;
		scanf("%d%d",&x,&y);
		printf("%d\n",lca(x,y));
	}
	return 0;
}
